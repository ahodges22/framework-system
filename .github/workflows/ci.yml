name: CI
on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Compute short SHA
        id: short-commit
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies for hidapi
        run: sudo apt-get update && sudo apt-get install -y libudev-dev pkg-config

      - name: Run clippy
        run: cargo clippy --all-targets -- -D warnings

      - name: Run fmt
        run: cargo fmt --all --check

      - name: Build debug (all)
        run: cargo build

      - name: Build library
        run: cargo build -p framework_lib

      - name: Build tool
        run: cargo build -p framework_tool

      - name: List debug tool binary
        run: ls -l target/debug/framework_tool

      - name: Build UEFI application (no ESP)
        run: make -C framework_uefi build/x86_64-unknown-uefi/boot.efi

      - name: List UEFI artifact
        run: ls -l framework_uefi/build/x86_64-unknown-uefi/boot.efi

      - name: Build release
        run: cargo build --release

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.short-commit.outputs.SHORT_SHA }}
          body: "Automated release from commit ${{ steps.short-commit.outputs.SHORT_SHA }}"
          draft: false
          prerelease: false
          files: |
            target/release/framework_tool
            framework_uefi/build/x86_64-unknown-uefi/boot.efi

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev

      - name: Setup Rust toolchain
        run: rustup show

      - name: Run cargo test
        run: cargo test -p framework_lib

  lints:
    name: Lints
    runs-on: ubuntu-24.04
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libudev-dev

    - name: Setup Rust toolchain
      run: rustup show

    - name: Run cargo fmt
      run: cargo fmt --all -- --check

    - name: Run cargo clippy
      run: cargo clippy -p framework_lib -p framework_tool -- -D warnings

  # Just make sure doc generation works
  doc:
    name: Generate docs
    runs-on: ubuntu-24.04
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
      # Fail if warnings are produced
      RUSTDOCFLAGS: -Dwarnings
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libudev-dev

    - name: Setup Rust toolchain
      run: rustup show

    - name: Run cargo doc
      run: cargo doc
